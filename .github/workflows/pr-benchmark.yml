name: PR Benchmark

on:
  pull_request:
    types: [opened, reopened]
  issue_comment:
    types: [created]

jobs:
  benchmark:
    if: |
      github.event_name == 'pull_request' ||
      (github.event_name == 'issue_comment' &&
       github.event.issue.pull_request != null &&
       contains(github.event.comment.body, 'retrigger-benchmark'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy

      - name: Create dummy Minecraft world directory
        run: |
          mkdir -p "./world/region"

      - name: Start timer
        id: start_time
        run: echo "start_time=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Run benchmark command with memory tracking
        id: benchmark
        run: |
          /usr/bin/time -v cargo run --release --no-default-features -- --path="./world" --terrain --bbox="48.117861,11.541996,48.154520,11.604824" 2> benchmark_log.txt
          grep "Maximum resident set size" benchmark_log.txt | awk '{print $6}' > peak_mem_kb.txt
          peak_kb=$(cat peak_mem_kb.txt)
          peak_mb=$((peak_kb / 1024))
          echo "peak_memory=${peak_mb}" >> $GITHUB_OUTPUT

      - name: End timer and calculate duration
        id: end_time
        run: |
          end_time=$(date +%s)
          start_time=${{ steps.start_time.outputs.start_time }}
          duration=$((end_time - start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

      - name: Format duration and generate summary
        id: comment_body
        run: |
          duration=${{ steps.end_time.outputs.duration }}
          minutes=$((duration / 60))
          seconds=$((duration % 60))
          peak_mem=${{ steps.benchmark.outputs.peak_memory }}

          baseline_time=124
          diff=$((duration - baseline_time))
          abs_diff=${diff#-}

          if [ "$diff" -lt -5 ]; then
            verdict="‚úÖ This PR **improves generation time**."
          elif [ "$abs_diff" -le 4 ]; then
            verdict="üü¢ Generation time is unchanged."
          elif [ "$diff" -le 15 ]; then
            verdict="‚ö†Ô∏è This PR **worsens generation time**."
          else
            verdict="üö® This PR **drastically worsens generation time**."
          fi

          baseline_mem=1960
          mem_annotation=""
          if [ "$peak_mem" -gt 2000 ]; then
            mem_diff=$((peak_mem - baseline_mem))
            mem_percent=$((mem_diff * 100 / baseline_mem))
            mem_annotation=" (‚Üó ${mem_percent}% more)"
          fi

          {
            echo "summary<<EOF"
            echo "‚è±Ô∏è Benchmark run finished in **${minutes}m ${seconds}s**"
            echo "üß† Peak memory usage: **${peak_mem} MB**${mem_annotation}"
            echo ""
            echo "üìà Compared against baseline: **${baseline_time}s**"
            echo "üßÆ Delta: **${diff}s**"
            echo "üî¢ Commit: [\`${GITHUB_SHA:0:7}\`](https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA})"
            echo ""
            echo "${verdict}"
            echo ""
            echo "_You can retrigger the benchmark by commenting \`retrigger-benchmark\`._"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Comment build time on PR
        uses: thollander/actions-comment-pull-request@v3
        with:
          message: ${{ steps.comment_body.outputs.summary }}
          comment-tag: benchmark-report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
